<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[hexo博客添加常用插件]]></title>
      <url>http://dbanote.github.io/2017/02/08/tools/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>Hexo提供了诸多插件来增强博客体验，地址<a href="http://hexo.io/plugins/" target="_blank" rel="external"><code>http://hexo.io/plugins</code></a></p>
<h2 id="添加生成文章目录插件hexo-toc"><a href="#添加生成文章目录插件hexo-toc" class="headerlink" title="添加生成文章目录插件hexo-toc"></a>添加生成文章目录插件hexo-toc</h2><ol>
<li><p>安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">cnpm install hexo-toc --save</div></pre></td></tr></table></figure>
</li>
<li><p>配置<br>在博客根目录下的<code>_config.yml</code>中如下配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">toc:</div><div class="line">  maxdepth: 3</div></pre></td></tr></table></figure>
</li>
<li><p>使用<br>在Markdown中需要显示文章目录的地方添加 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&lt;!-- toc --&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<a id="more"></a>
<h2 id="添加百度统计支持"><a href="#添加百度统计支持" class="headerlink" title="添加百度统计支持"></a>添加百度统计支持</h2><p><code>yilia</code>主题自带统计支持</p>
<ol>
<li><p>打开<a href="http://tongji.baidu.com/web/welcome/login" target="_blank" rel="external">百度统计</a>网站，注册账号<br><img src="/img/2017/baidu_stat_01.png" alt="baidu_stat_01.png"></p>
</li>
<li><p>填写注册信息<br><img src="/img/2017/baidu_stat_02.png" alt="baidu_stat_02.png"></p>
</li>
<li><p>记录百度统计ID号码<br><img src="/img/2017/baidu_stat_03.png" alt="baidu_stat_03.png"></p>
</li>
<li><p>编辑修改<code>themes\yilia</code>目录下的<code>_config.yml</code>文件</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><div class="line"><span class="comment"># Miscellaneous</span></div><div class="line">baidu_analytics: <span class="string">'xxxxxxxxxxxx'</span>   <span class="comment"># xxxxxx是刚获得的百度统计ID号码</span></div></pre></td></tr></table></figure>
</li>
<li><p>统计代码安装检查，确保代码安装正确<br><img src="/img/2017/baidu_stat_04.png" alt="baidu_stat_04.png"></p>
</li>
</ol>
<h2 id="添加多说评论支持"><a href="#添加多说评论支持" class="headerlink" title="添加多说评论支持"></a>添加多说评论支持</h2><ol>
<li><p>打开<a href="http://duoshuo.com/" target="_blank" rel="external">多说</a>网站<br><img src="/img/2017/duoshuo_01.png" alt="duoshuo_01.png"></p>
</li>
<li><p>选择微信登陆<br><img src="/img/2017/duoshuo_02.png" alt="duoshuo_02.png"></p>
</li>
<li><p>点击<code>我要安装</code><br><img src="/img/2017/duoshuo_03.png" alt="duoshuo_03.png"></p>
</li>
<li><p>填写相应信息<br><img src="/img/2017/duoshuo_04.png" alt="duoshuo_04.png"></p>
</li>
<li><p>编辑修改<code>themes\yilia</code>目录下的<code>_config.yml</code>文件</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><div class="line"><span class="comment">#是否开启多说评论，开启填写你在多说申请的项目的short_name: dbanote</span></div><div class="line"><span class="comment">#duoshuo: false</span></div><div class="line">duoshuo: dbanote</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="http://www.ituring.com.cn/article/199624" target="_blank" rel="external">Hexo站点中添加文章目录以及归档</a></li>
<li><a href="http://www.cnblogs.com/peihao/p/5269131.html" target="_blank" rel="external">hexo优化目录</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hexo更换主题并个性化定制]]></title>
      <url>http://dbanote.github.io/2017/02/08/tools/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%B9%B6%E4%B8%AA%E6%80%A7%E5%8C%96%E5%AE%9A%E5%88%B6/</url>
      <content type="html"><![CDATA[<blockquote>
<p>hexo系统默认的主题虽然也不错，但我更喜欢<a href="http://moxfive.xyz/yelee" target="_blank" rel="external">yelee</a>和<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">yilia</a>这两款主题</p>
</blockquote>
<h2 id="安装yelee主题"><a href="#安装yelee主题" class="headerlink" title="安装yelee主题"></a>安装yelee主题</h2><ol>
<li><p>主题说明文档：<a href="http://moxfive.coding.me/yelee" target="_blank" rel="external"><code>http://moxfive.coding.me/yelee/</code></a></p>
</li>
<li><p>在博客根目录下执行以下命令</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 克隆最新一次提交（git clone速度很慢，可只克隆最新一次提交）</span></div><div class="line">git clone --depth <span class="number">1</span> https:<span class="regexp">//github</span>.com/MOxFIVE/hexo-theme-yelee.git themes/yelee</div></pre></td></tr></table></figure>
</li>
<li><p>编辑修改根目录下的<code>_config.yml</code>文件</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><div class="line"><span class="comment"># theme: landscape</span></div><div class="line">theme: yelee</div></pre></td></tr></table></figure>
</li>
<li><p>更换主题后需要清理并重新生成静态页</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</div></pre></td></tr></table></figure>
</li>
<li><p>安装搜索插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">cnpm install hexo-generator-search --save</div></pre></td></tr></table></figure>
</li>
<li><p>参照文档修改<code>themes\yelee</code>目录下的<code>_config.yml</code>文件</p>
</li>
</ol>
<a id="more"></a>
<h2 id="安装yilia主题"><a href="#安装yilia主题" class="headerlink" title="安装yilia主题"></a>安装yilia主题</h2><ol>
<li><p>在博客根目录下执行以下命令</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><div class="line">git clone https:<span class="regexp">//github</span>.com/litten/hexo-theme-yilia.git themes/yilia</div><div class="line"><span class="comment"># 或者</span></div><div class="line">git clone git@github.com:litten/hexo-theme-yilia.git themes/yilia</div><div class="line"></div><div class="line"><span class="comment"># 克隆最新一次提交（git clone速度很慢，可只克隆最新一次提交）</span></div><div class="line">git clone --depth <span class="number">1</span> https:<span class="regexp">//github</span>.com/litten/hexo-theme-yilia.git themes/yilia</div></pre></td></tr></table></figure>
</li>
<li><p>在博客根目录（注意不是yilia根目录）执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">cnpm i hexo-generator-json-content --save</div></pre></td></tr></table></figure>
</li>
<li><p>编辑修改根目录下的<code>_config.yml</code>文件</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><div class="line"><span class="comment"># theme: landscape</span></div><div class="line">theme: yilia</div><div class="line"></div><div class="line"><span class="comment"># 添加以下内容</span></div><div class="line"><span class="comment"># jsonContent</span></div><div class="line">jsonContent:</div><div class="line">    meta: false</div><div class="line">    pages: false</div><div class="line">    posts:</div><div class="line">      title: true</div><div class="line">      date: true</div><div class="line">      path: true</div><div class="line">      text: true</div><div class="line">      raw: false</div><div class="line">      content: false</div><div class="line">      slug: false</div><div class="line">      updated: false</div><div class="line">      comments: false</div><div class="line">      <span class="keyword">link</span>: false</div><div class="line">      permalink: false</div><div class="line">      excerpt: false</div><div class="line">      categories: false</div><div class="line">      tags: true</div></pre></td></tr></table></figure>
</li>
<li><p>更换主题后需要清理并重新生成静态页</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo g</div><div class="line">hexo s</div></pre></td></tr></table></figure>
</li>
<li><p>更换后效果<br><img src="/img/2017/update_theme.png" alt="update_theme.png"></p>
</li>
<li><p>编辑修改<code>themes\yilia</code>目录下的<code>_config.yml</code>文件</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 修改menu</span></div><div class="line">menu:</div><div class="line">  主页: <span class="regexp">/</span></div><div class="line">  归档: /archives<span class="regexp">/</span></div><div class="line">  #随笔: /tags<span class="regexp">/随笔/</span></div><div class="line"></div><div class="line"><span class="comment"># 修改并注释掉不需要的项</span></div><div class="line"><span class="comment"># SubNav</span></div><div class="line">subnav:</div><div class="line">  github: <span class="string">"https://github.com/dbanote"</span></div><div class="line">  weibo: <span class="string">"http://weibo.com/foxbei"</span></div><div class="line">  <span class="comment">#rss: "#"</span></div><div class="line">  <span class="comment">#zhihu: "#"</span></div><div class="line">  qq: <span class="string">"http://sighttp.qq.com/msgrd?v=1&amp;uin=9320802"</span></div><div class="line">  <span class="comment">#weixin: "#"</span></div><div class="line">  <span class="comment">#jianshu: "#"</span></div><div class="line">  <span class="comment">#douban: "#"</span></div><div class="line">  mail: <span class="string">"mailto:15004618839@139.com"</span></div><div class="line"></div><div class="line"><span class="comment"># 文章太长，截断按钮文字</span></div><div class="line"><span class="comment"># 截断需要在文章中添加 &lt;!--more--&gt;</span></div><div class="line"><span class="comment">#excerpt_link: more</span></div><div class="line">excerpt_link: false</div><div class="line"></div><div class="line"><span class="comment"># 设置打赏二维码</span></div><div class="line"><span class="comment"># 打赏基础设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span></div><div class="line">reward_type: <span class="number">2</span></div><div class="line"><span class="comment"># 打赏wording</span></div><div class="line">reward_wording: <span class="string">'喜欢的话，支付1元请我吃糖吧！'</span></div><div class="line"></div><div class="line"><span class="comment"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg</span></div><div class="line"><span class="comment"># 支付宝收款1元二维码图片</span></div><div class="line">alipay: <span class="regexp">/img/zhifubao</span>01.png</div><div class="line"><span class="comment"># 支付宝收款无金额设置二维码图片</span></div><div class="line"><span class="comment"># alipay: /img/zhifubao.png</span></div><div class="line"></div><div class="line"><span class="comment"># 微信二维码图片地址</span></div><div class="line"><span class="comment"># 微信收款1元二维码图片</span></div><div class="line">weixin: <span class="regexp">/img/weixin</span>01.png</div><div class="line"><span class="comment"># 微信收款无金额设置二维码图片</span></div><div class="line"><span class="comment"># alipay: /img/weixin.png</span></div><div class="line"></div><div class="line"><span class="comment"># 修改网站收藏夹图标</span></div><div class="line">favicon: <span class="regexp">/img/favicon</span>.png</div><div class="line"></div><div class="line"><span class="comment">#你的头像url</span></div><div class="line">avatar: <span class="regexp">/img/avatar</span>.jpg</div><div class="line"></div><div class="line"><span class="comment"># 根据需要修改以下内容</span></div><div class="line"><span class="comment"># 智能菜单</span></div><div class="line"><span class="comment"># 如不需要，将该对应项置为false</span></div><div class="line"><span class="comment"># 比如</span></div><div class="line"><span class="comment">#smart_menu:</span></div><div class="line"><span class="comment">#  friends: false</span></div><div class="line">smart_menu:</div><div class="line">  innerArchive: <span class="string">'所有文章'</span></div><div class="line">  friends: <span class="string">'常用网站'</span></div><div class="line">  aboutme: <span class="string">'关于我'</span></div><div class="line"></div><div class="line">friends:</div><div class="line">  My Oracle Support: https:<span class="regexp">//support</span>.oracle.com/</div><div class="line">  Oracle Edelivery: https:<span class="regexp">//edelivery</span>.oracle.com/</div><div class="line">  Oracle Help Center: http:<span class="regexp">//docs</span>.oracle.com/</div><div class="line">  练数成金: http:<span class="regexp">//www</span>.dataguru.cn/</div><div class="line">  三通IT论坛: http:<span class="regexp">//www</span>.santongit.com/</div><div class="line">  一起自学吧: http:<span class="regexp">//www</span>.<span class="number">17</span>zixueba.com/</div><div class="line"></div><div class="line">aboutme: DBA&lt;br&gt;&lt;br&gt;工作学习笔记&lt;br&gt;谢谢大家</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Sublime Text 常用快捷键]]></title>
      <url>http://dbanote.github.io/2017/01/30/tools/Sublime%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      <content type="html"><![CDATA[<h2 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">↑ ↓ ← →             上下左右移动光标</div><div class="line">Alt                 调出菜单</div><div class="line">Ctrl + Shift + P    调出命令板（Command Palette）</div><div class="line">Ctrl + `            调出控制台</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">Ctrl + Enter            在当前行下面新增一行然后跳至该行</div><div class="line">Ctrl + Shift + Enter    在当前行上面增加一行并跳至该行</div><div class="line">Ctrl + ←/→              进行逐词移动</div><div class="line">Ctrl + Shift + ←/→      进行逐词选择</div><div class="line">Ctrl + ↑/↓              移动当前显示区域</div><div class="line">Ctrl + Shift + ↑/↓      移动当前行</div></pre></td></tr></table></figure>
<h2 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">Ctrl + D                选择当前光标所在的词并高亮该词所有出现的位置</div><div class="line">                        再次 Ctrl + D 选择该词出现的下一个位置，在多重选词的过程中</div><div class="line">                        使用 Ctrl + K 进行跳过，使用 Ctrl + U 进行回退，使用 Esc 退出多重编辑</div><div class="line">Ctrl + Shift + L        将当前选中区域打散</div><div class="line">Ctrl + J                把当前选中区域合并为一行</div><div class="line">Ctrl + M                在起始括号和结尾括号间切换</div><div class="line">Ctrl + Shift + M        快速选择括号间的内容</div><div class="line">Ctrl + Shift + J        快速选择同缩进的内容</div><div class="line">Ctrl + Shift + Space    快速选择当前作用域（Scope）的内容</div></pre></td></tr></table></figure>
<h2 id="查找amp替换"><a href="#查找-amp-替换" class="headerlink" title="查找&amp;替换"></a>查找&amp;替换</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">F3                  跳至当前关键字下一个位置</div><div class="line">Shift + F3          跳到当前关键字上一个位置</div><div class="line">Alt + F3            选中当前关键字出现的所有位置</div><div class="line">Ctrl + F/H          进行标准查找/替换，之后：</div><div class="line">Alt + C             切换大小写敏感（Case-sensitive）模式</div><div class="line">Alt + W             切换整字匹配（Whole matching）模式</div><div class="line">Alt + R             切换正则匹配（Regex matching）模式</div><div class="line">Ctrl + Shift + H    替换当前关键字</div><div class="line">Ctrl + Alt + Enter  替换所有关键字匹配</div><div class="line">Ctrl + Shift + F    多文件搜索&amp;替换</div></pre></td></tr></table></figure>
<h2 id="跳转"><a href="#跳转" class="headerlink" title="跳转"></a>跳转</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">Ctrl + P        跳转到指定文件，输入文件名后可以：</div><div class="line">@ 符号跳转       输入@symbol跳转到symbol符号所在的位置</div><div class="line"># 关键字跳转     输入#keyword跳转到keyword所在的位置</div><div class="line">: 行号跳转       输入:12跳转到文件的第12行。</div><div class="line">Ctrl + R        跳转到指定符号</div><div class="line">Ctrl + G        跳转到指定行号</div></pre></td></tr></table></figure>
<h2 id="窗口"><a href="#窗口" class="headerlink" title="窗口"></a>窗口</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">Ctrl + Shift + N    创建一个新窗口</div><div class="line">Ctrl + N            在当前窗口创建一个新标签</div><div class="line">Ctrl + W            关闭当前标签，当窗口内没有标签时会关闭该窗口</div><div class="line">Ctrl + Shift + T    恢复刚刚关闭的标签</div></pre></td></tr></table></figure>
<h2 id="屏幕"><a href="#屏幕" class="headerlink" title="屏幕"></a>屏幕</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">F11                             切换至普通全屏</div><div class="line">Shift + F11                     切换至无干扰全屏</div><div class="line">Alt+Shift+1       Single        切换至独屏</div><div class="line">Alt+Shift+2       Columns:2     切换至纵向二栏分屏</div><div class="line">Alt+Shift+3       Columns:3     切换至纵向三栏分屏</div><div class="line">Alt+Shift+4       Columns:4     切换至纵向四栏分屏</div><div class="line">Alt+Shift+8       Rows:2        切换至横向二栏分屏</div><div class="line">Alt+Shift+9       Rows:3        切换至横向三栏分屏</div><div class="line">Alt+Shift+5       Grid          切换至四格式分屏</div></pre></td></tr></table></figure>
<h2 id="插件deleteblanklines"><a href="#插件”DeleteBlankLines”" class="headerlink" title="插件”DeleteBlankLines”"></a>插件”DeleteBlankLines”</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># Windows/Linux</div><div class="line">Ctrl+Alt+Backspace          删除所有空行</div><div class="line">Ctrl+Alt+Shift+Backspace    删除多余空行</div><div class="line"></div><div class="line"># Mac OS</div><div class="line">Ctrl+Alt+Delete             删除所有空行</div><div class="line">Ctrl+Alt+Shift+Delete       删除多余空行</div></pre></td></tr></table></figure>
<h2 id="插件sublimetmpl"><a href="#插件”SublimeTmpl”" class="headerlink" title="插件”SublimeTmpl”"></a>插件”SublimeTmpl”</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">ctrl+alt+h          html</div><div class="line">ctrl+alt+j          javascript</div><div class="line">ctrl+alt+c          css</div><div class="line">ctrl+alt+p          php</div><div class="line">ctrl+alt+r          ruby</div><div class="line">ctrl+alt+shift+p    python</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[GIT常用命令整理]]></title>
      <url>http://dbanote.github.io/2017/01/26/git/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/</url>
      <content type="html"><![CDATA[<h2 id="基本信息设置与查看"><a href="#基本信息设置与查看" class="headerlink" title="基本信息设置与查看"></a>基本信息设置与查看</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">git config --global user.name &apos;dbanote&apos;</div><div class="line">git config --global user.email &apos;15004618839@139.com&apos;</div><div class="line"></div><div class="line">git config --list</div></pre></td></tr></table></figure>
<h2 id="初始化git仓库"><a href="#初始化git仓库" class="headerlink" title="初始化git仓库"></a>初始化git仓库</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">git init</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="向本地仓库中添加修改文件"><a href="#向本地仓库中添加-修改文件" class="headerlink" title="向本地仓库中添加/修改文件"></a>向本地仓库中添加/修改文件</h2><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 添加/修改/删除工作区文件后，保存变动内容到暂存区</span></div><div class="line">git add &lt;file&gt;</div><div class="line">git add *</div><div class="line"></div><div class="line"><span class="comment"># 查看暂存区状态</span></div><div class="line">git status</div><div class="line"></div><div class="line"><span class="comment"># 暂存区内容提交到git仓库</span></div><div class="line">git commit -<span class="keyword">m</span> <span class="string">"git init"</span></div></pre></td></tr></table></figure>
<h2 id="push远程仓库"><a href="#PUSH远程仓库" class="headerlink" title="PUSH远程仓库"></a>PUSH远程仓库</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">git remote add origin git@github.com:dbanote/08_dbanote.git</div><div class="line">git push -u origin master</div></pre></td></tr></table></figure>
<h2 id="克隆远程仓库"><a href="#克隆远程仓库" class="headerlink" title="克隆远程仓库"></a>克隆远程仓库</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">git clone git@github.com:dbanote/08_dbanote.git</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MySQL DBA从小白到大神实战-02 MySQL标准化、自动化部署]]></title>
      <url>http://dbanote.github.io/2017/01/26/mysql/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/02-MySQL-DBA%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98/</url>
      <content type="html"><![CDATA[<h2 id="为什么数据目录和日志目录需要分开"><a href="#为什么数据目录和日志目录需要分开" class="headerlink" title="为什么数据目录和日志目录需要分开?"></a>为什么数据目录和日志目录需要分开?</h2><p>这里的分开，我理解是将MySQL的数据目录和日志目录分别放到不同类型的磁盘中。<br>假设生产环境中服务器上有两种类型的磁盘，分别是SSD和SAS，SSD比SAS的响应时间要快（SSD响应时间约0.1毫秒，SAS的响应时间约10毫秒），为了更好的利用磁盘，一般会把活跃的数据放到SSD上，冷数据放到SAS磁盘上。<br>数据目录下的数据一般是随机读写的热数据，放到SSD盘中会有较高的响应速度；<br>日志目录下的日志是顺序读写的冷数据，放到SAS盘中满足写日志高吞吐量的需求。<br><a id="more"></a></p>
<h2 id="如何标准化配置多实例例如一台物理主机上部署3306与3307两个实例"><a href="#如何标准化配置多实例-（例如：一台物理主机上部署3306与3307两个实例）" class="headerlink" title="如何标准化配置多实例?（例如：一台物理主机上部署3306与3307两个实例）"></a>如何标准化配置多实例?（例如：一台物理主机上部署3306与3307两个实例）</h2><p>标准化配置多实例，主要是标准化每个实例的目录和内存设置，这样每个实例的参数设置也很容易达到标准化。标准化配置的MYSQL实例，方便实施监控及运维管理。<br>因一个MySQL实例最多占用64G的物理内存，所以在物理内存较高的服务器上，一般会安装多个MySQL实例，MySQL不同实例是通过端口来区别的。<br>例如：一台64G的物理主机上部署3306与3307两个MYSQL实例  </p>
<h3 id="标准化目录"><a href="#标准化目录" class="headerlink" title="标准化目录"></a>标准化目录</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">实例1：</div><div class="line">/data/my3306</div><div class="line">/log/my3306</div><div class="line"></div><div class="line">实例2：</div><div class="line">/data/my3307</div><div class="line">/log/my3307</div><div class="line"></div><div class="line"># /data 目录挂载到SSD盘上</div><div class="line"># /log  目录挂载到SAS盘上</div></pre></td></tr></table></figure>
<h3 id="标准化内存"><a href="#标准化内存" class="headerlink" title="标准化内存"></a>标准化内存</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">实例1：</div><div class="line">15G: InnoDB buffer cache</div><div class="line">5G : mysql server层</div><div class="line"></div><div class="line">实例2：</div><div class="line">15G: InnoDB buffer cache</div><div class="line">5G : mysql server层</div><div class="line"></div><div class="line">OS:</div><div class="line">24G</div></pre></td></tr></table></figure>
<h3 id="标准化参数"><a href="#标准化参数" class="headerlink" title="标准化参数"></a>标准化参数</h3><p>结合标准化的目录及内存设置，设置标准化的参数</p>
<h2 id="详细描述mysql编译安装的过程截图安装步骤"><a href="#详细描述MySQL编译安装的过程（截图安装步骤）" class="headerlink" title="详细描述MySQL编译安装的过程（截图安装步骤）"></a>详细描述MySQL编译安装的过程（截图安装步骤）</h2><h3 id="关闭防火墙和selinux"><a href="#关闭防火墙和SELINUX" class="headerlink" title="关闭防火墙和SELINUX"></a>关闭防火墙和SELINUX</h3><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line">service iptables status</div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line">Table: filter</div><div class="line">Chain INPUT (policy ACCEPT)</div><div class="line">num  target     prot opt source               destination         </div><div class="line"><span class="number">1</span>    ACCEPT     all  --  <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span>            <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span>           <span class="keyword">state</span> RELATED,ESTABLISHED </div><div class="line"><span class="number">2</span>    ACCEPT     icmp --  <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span>            <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span>           </div><div class="line"><span class="number">3</span>    ACCEPT     all  --  <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span>            <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span>           </div><div class="line"><span class="number">4</span>    ACCEPT     tcp  --  <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span>            <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span>           <span class="keyword">state</span> NEW tcp dpt:<span class="number">22</span> </div><div class="line"><span class="number">5</span>    REJECT     all  --  <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span>            <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span>           reject-with icmp-host-prohibited </div><div class="line"></div><div class="line">Chain FORWARD (policy ACCEPT)</div><div class="line">num  target     prot opt source               destination         </div><div class="line"><span class="number">1</span>    REJECT     all  --  <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span>            <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">0</span>           reject-with icmp-host-prohibited </div><div class="line"></div><div class="line">Chain OUTPUT (policy ACCEPT)</div><div class="line">num  target     prot opt source               destination         </div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line"></div><div class="line">service iptables stop</div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line">iptables: Setting chains to policy ACCEPT: filter          [  OK  ]</div><div class="line">iptables: Flushing firewall rules:                         [  OK  ]</div><div class="line">iptables: Unloading modules:                               [  OK  ]</div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line"></div><div class="line">service iptables status</div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line">iptables: Firewall is <span class="keyword">not</span> running.</div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line"></div><div class="line">chkconfig iptables off</div><div class="line"></div><div class="line">vi /etc/selinux/config</div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line">SELINUX=disabled</div><div class="line"><span class="comment">#------------------------------------------------</span></div></pre></td></tr></table></figure>
<h3 id="配置sysctlconf"><a href="#配置sysctl-conf" class="headerlink" title="配置sysctl.conf"></a>配置sysctl.conf</h3><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 查看服务器内存</span></div><div class="line">free</div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line">             total       used       free     shared    buffers     cached</div><div class="line">Mem:       <span class="number">8174352</span>     <span class="number">616628</span>    <span class="number">7557724</span>        <span class="number">172</span>     <span class="number">151904</span>     <span class="number">253892</span></div><div class="line">-<span class="regexp">/+ buffers/cache</span>:     <span class="number">210832</span>    <span class="number">7963520</span></div><div class="line">Swap:     <span class="number">16531452</span>          <span class="number">0</span>   <span class="number">16531452</span></div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line"></div><div class="line">vi /etc/sysctl.conf</div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line"><span class="comment"># 修改</span></div><div class="line">kernel.shmmax = <span class="number">4398046511104</span></div><div class="line"></div><div class="line"><span class="comment"># 添加</span></div><div class="line">fs.file-max = <span class="number">6815744</span></div><div class="line">kernel.sem = <span class="number">250</span> <span class="number">32000</span> <span class="number">100</span> <span class="number">128</span></div><div class="line">kernel.shmmni = <span class="number">4096</span></div><div class="line">kernel.panic_on_oops = <span class="number">1</span></div><div class="line">net.core.rmem_default = <span class="number">262144</span></div><div class="line">net.core.rmem_max = <span class="number">4194304</span></div><div class="line">net.core.wmem_default = <span class="number">262144</span></div><div class="line">net.core.wmem_max = <span class="number">1048576</span></div><div class="line">fs.aio-max-nr = <span class="number">1048576</span></div><div class="line">net.ipv4.ip_local_port_range = <span class="number">9000</span> <span class="number">65500</span></div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line"><span class="comment"># kernel.shmmax算法：修改为物理内容的50%、60%</span></div><div class="line"><span class="comment"># 8G:kernel.shmmax = (8G*1024*1024*1024*1024)*50% = 4398046511104</span></div><div class="line"></div><div class="line"><span class="comment"># 使配置立即生效</span></div><div class="line">sysctl -p</div></pre></td></tr></table></figure>
<h3 id="检查是否已安装mysql"><a href="#检查是否已安装MySQL" class="headerlink" title="检查是否已安装MySQL"></a>检查是否已安装MySQL</h3><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line">rpm -qa | <span class="keyword">grep</span> mysql</div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line">mysql-libs-<span class="number">5.1</span>.<span class="number">73</span>-<span class="number">7</span>.el6.x86_64</div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># 删除mysql-libs-5.1.73-7.el6.x86_64包</span></div><div class="line">rpm -e --nodeps mysql-libs-<span class="number">5.1</span>.<span class="number">73</span>-<span class="number">7</span>.el6.x86_64</div></pre></td></tr></table></figure>
<h3 id="下载mysql源码"><a href="#下载MySQL源码" class="headerlink" title="下载MySQL源码"></a>下载MySQL源码</h3><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line">Download MySQL Community Server  https:<span class="regexp">//dev</span>.mysql.com/downloads/mysql/<span class="number">5.6</span>.html<span class="comment">#downloads</span></div><div class="line">Select Version: <span class="number">5.6</span>.<span class="number">35</span> -&gt; Select Platform: Source Code</div><div class="line">-&gt; 选择【Generic Linux (Architecture Independent), Compressed TAR Archive】下载 </div><div class="line"></div><div class="line"><span class="comment"># 配置yum源，安装lrzsz(代替ftp上传和下载的工具)</span></div><div class="line"><span class="keyword">mkdir</span> /media/disk</div><div class="line"><span class="keyword">mkdir</span> /media/cdrom</div><div class="line">mount /dev/cdrom /media/cdrom</div><div class="line"></div><div class="line">cp -rf /media/cdrom/* <span class="regexp">/media/disk</span></div><div class="line">umount /media/cdrom</div><div class="line"></div><div class="line">cp /etc/yum.repos.d/public-yum-ol6.repo /etc/yum.repos.d/public-yum-ol6.repo.bak</div><div class="line">vi /etc/yum.repos.d/public-yum-ol6.repo</div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line">name=Oracle Linux $releasever Latest ($basearch)</div><div class="line">baseurl=file:<span class="regexp">//</span><span class="regexp">/media/disk</span><span class="regexp">/Server</span></div><div class="line">gpgcheck=0</div><div class="line">enabled=1</div><div class="line">#------------------------------------------------</div><div class="line"></div><div class="line">yum -y install lrzsz</div><div class="line"></div><div class="line"># 上传到服务器的/u01目录下</div><div class="line"><span class="keyword">mkdir</span> /u01</div><div class="line">cd /u01</div><div class="line">rz</div><div class="line"></div><div class="line"><span class="comment"># 选择mysql源码包，上传</span></div><div class="line">rz waiting to receive.</div><div class="line">Starting zmodem transfer.  Press Ctrl+C to cancel.</div><div class="line">Transferring mysql-<span class="number">5.6</span>.<span class="number">35</span>.tar.gz...</div><div class="line">  <span class="number">100</span>%   <span class="number">31413</span> KB    <span class="number">15706</span> KB/sec    <span class="number">00</span>:<span class="number">00</span>:<span class="number">02</span>       <span class="number">0</span> Errors </div><div class="line"></div><div class="line">ll /u01/mysql*</div><div class="line">-rw-r--r--. <span class="number">1</span> root root <span class="number">32167628</span> Jan <span class="number">17</span> <span class="number">11</span>:<span class="number">16</span> /u01/mysql-<span class="number">5.6</span>.<span class="number">35</span>.tar.gz</div></pre></td></tr></table></figure>
<h3 id="添加mysql用户和组"><a href="#添加MySQL用户和组" class="headerlink" title="添加MySQL用户和组"></a>添加MySQL用户和组</h3><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line">groupadd -g <span class="number">501</span> mysql</div><div class="line">useradd -u <span class="number">501</span> mysql -g mysql</div><div class="line">echo <span class="string">"mysql123"</span> | passwd --stdin mysql</div><div class="line"></div><div class="line">id mysql</div><div class="line">uid=<span class="number">501</span>(mysql) gid=<span class="number">501</span>(mysql) groups=<span class="number">501</span>(mysql)</div></pre></td></tr></table></figure>
<h3 id="配mysql环境变量"><a href="#配MySQL环境变量" class="headerlink" title="配MySQL环境变量"></a>配MySQL环境变量</h3><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line">vi /home/mysql/.bash_profile</div><div class="line"><span class="comment">#------------------------------------------------</span></div><div class="line">PATH=$PATH:$HOME/bin:<span class="regexp">/u01/my</span>3306/bin</div><div class="line"><span class="comment">#------------------------------------------------</span></div></pre></td></tr></table></figure>
<h3 id="创建目录及授权"><a href="#创建目录及授权" class="headerlink" title="创建目录及授权"></a>创建目录及授权</h3><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line"><span class="keyword">mkdir</span> -p /u01/my3306/data</div><div class="line"><span class="keyword">mkdir</span> -p /u01/my3306/<span class="keyword">log</span>/iblog</div><div class="line"><span class="keyword">mkdir</span> -p /u01/my3306/<span class="keyword">log</span>/binlog</div><div class="line"><span class="keyword">mkdir</span> -p /u01/my3306/run</div><div class="line"><span class="keyword">mkdir</span> -p /u01/my3306/tmp</div><div class="line"></div><div class="line"><span class="keyword">chown</span> -R mysql:mysql /u01/my3306</div><div class="line"><span class="keyword">chmod</span> -R <span class="number">755</span> /u01/my3306</div></pre></td></tr></table></figure>
<h3 id="解压mysql56"><a href="#解压mysql5-6" class="headerlink" title="解压mysql5.6"></a>解压mysql5.6</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">cd /u01</div><div class="line">tar xvpf mysql-5.6.35.tar.gz</div></pre></td></tr></table></figure>
<h3 id="安装cmake及相关依赖包"><a href="#安装cmake及相关依赖包" class="headerlink" title="安装cmake及相关依赖包"></a>安装cmake及相关依赖包</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">yum install -y  cmake gcc gcc-c++ ncurses-devel bison zlib libxml openssl</div></pre></td></tr></table></figure>
<h3 id="编译并安装"><a href="#编译并安装" class="headerlink" title="编译并安装"></a>编译并安装</h3><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line">cd /u01/mysql-<span class="number">5.6</span>.<span class="number">35</span></div><div class="line"></div><div class="line">cmake \</div><div class="line">-DCMAKE_INSTALL_PREFIX=<span class="regexp">/u01/my</span>3306 \</div><div class="line">-DINSTALL_DATADIR=<span class="regexp">/u01/my</span>3306/data  \</div><div class="line">-DDEFAULT_CHARSET=utf8 \</div><div class="line">-DDEFAULT_COLLATION=utf8_general_ci \</div><div class="line">-DEXTRA_CHARSETS=all \</div><div class="line">-DWITH_SSL=yes \</div><div class="line">-DWITH_EMBEDDED_SERVER=<span class="number">1</span> \</div><div class="line">-DENABLED_LOCAL_INFILE=<span class="number">1</span> \</div><div class="line">-DWITH_MYISAM_STORAGE_ENGINE=<span class="number">1</span> \</div><div class="line">-DWITH_INNOBASE_STORAGE_ENGINE=<span class="number">1</span> \</div><div class="line">-DWITH_ARCHIVE_STORAGE_ENGINE=<span class="number">1</span> \</div><div class="line">-DWITH_BLACKHOLE_STORAGE_ENGINE=<span class="number">1</span> \</div><div class="line">-DWITH_FEDERATED_STORAGE_ENGINE=<span class="number">1</span> \</div><div class="line">-DWITH_PARTITION_STORAGE_ENGINE=<span class="number">1</span> \</div><div class="line">-DMYSQL_UNIX_ADDR=<span class="regexp">/u01/my</span>3306/run/mysql.sock \</div><div class="line">-DMYSQL_TCP_PORT=<span class="number">3306</span> \</div><div class="line">-DENABLED_LOCAL_INFILE=<span class="number">1</span> \</div><div class="line">-DSYSCONFDIR=<span class="regexp">/etc \</span></div><div class="line">-DWITH_READLINE=on</div><div class="line"></div><div class="line"># 第一次CMAKE出现错误提示</div><div class="line">#---------------------------------------------------------------------------------------------</div><div class="line">CMake Error: The following variables are used in this project, but they are set to NOTFOUND.</div><div class="line">Please set them or make sure they are set and tested correctly in the CMake files:</div><div class="line">OPENSSL_INCLUDE_DIR</div><div class="line">   used as include directory in directory /u01/mysql-<span class="number">5.6</span>.<span class="number">35</span>/CMakeFiles/CMakeTmp</div><div class="line"><span class="comment">#---------------------------------------------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment">#安装openssl-devel包</span></div><div class="line">yum -<span class="keyword">y</span> install openssl-devel</div><div class="line"></div><div class="line"><span class="comment">#重新cmake需要删除当前目录下CMakeCache.txt，然后再重新执行</span></div><div class="line">rm -rf CMakeCache.txt</div><div class="line"></div><div class="line"><span class="comment">#编译并安装</span></div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure>
<h3 id="mysql参数配置"><a href="#MySQL参数配置" class="headerlink" title="MySQL参数配置"></a>MySQL参数配置</h3><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line">cd /u01/my3306</div><div class="line">vi my.</div><div class="line"><span class="comment">#----------------------------------------------------------</span></div><div class="line">[client]</div><div class="line">port=<span class="number">3306</span></div><div class="line"><span class="keyword">socket</span>=<span class="regexp">/u01/my</span>3306/mysql.sock</div><div class="line"></div><div class="line">[mysql]</div><div class="line">pid_file=<span class="regexp">/u01/my</span>3306/run/mysqld.pid</div><div class="line"></div><div class="line">[mysqld]</div><div class="line">autocommit=<span class="number">1</span></div><div class="line">general_log=off</div><div class="line">explicit_defaults_for_timestamp=true</div><div class="line"></div><div class="line"><span class="comment"># system</span></div><div class="line">basedir=<span class="regexp">/u01/my</span>3306</div><div class="line">datadir=<span class="regexp">/u01/my</span>3306/data</div><div class="line">max_allowed_packet=<span class="number">1</span>g</div><div class="line">max_connections=<span class="number">3000</span></div><div class="line">max_user_connections=<span class="number">2800</span></div><div class="line">open_files_limit=<span class="number">65535</span></div><div class="line">pid_file=<span class="regexp">/u01/my</span>3306/run/mysqld.pid</div><div class="line">port=<span class="number">3306</span></div><div class="line">server_id=<span class="number">101</span></div><div class="line">skip_name_resolve=ON</div><div class="line"><span class="keyword">socket</span>=<span class="regexp">/u01/my</span>3306/run/mysql.sock</div><div class="line">tmpdir=<span class="regexp">/u01/my</span>3306/tmp</div><div class="line"></div><div class="line"><span class="comment">#binlog</span></div><div class="line">log_bin=<span class="regexp">/u01/my</span>3306/<span class="keyword">log</span>/binlog/binlog</div><div class="line">binlog_cache_size=<span class="number">32768</span></div><div class="line">binlog_format=row</div><div class="line">expire_logs_days=<span class="number">7</span></div><div class="line">log_slave_updates=ON</div><div class="line">max_binlog_cache_size=<span class="number">2147483648</span></div><div class="line">max_binlog_size=<span class="number">524288000</span></div><div class="line">sync_binlog=<span class="number">100</span></div><div class="line"></div><div class="line"><span class="comment">#logging</span></div><div class="line">log_error=<span class="regexp">/u01/my</span>3306/<span class="keyword">log</span>/error.log</div><div class="line">slow_query_log_file=<span class="regexp">/u01/my</span>3306/<span class="keyword">log</span>/slow.log</div><div class="line">log_queries_not_using_indexes=<span class="number">0</span></div><div class="line">slow_query_log=<span class="number">1</span></div><div class="line">log_slave_updates=ON</div><div class="line">log_slow_admin_statements=<span class="number">1</span></div><div class="line">long_query_time=<span class="number">1</span></div><div class="line"></div><div class="line"><span class="comment">#relay</span></div><div class="line">relay_log=<span class="regexp">/u01/my</span>3306/<span class="keyword">log</span>/relaylog</div><div class="line">relay_log_index=<span class="regexp">/u01/my</span>3306/<span class="keyword">log</span>/relay.index</div><div class="line">relay_log_info_file=<span class="regexp">/u01/my</span>3306/<span class="keyword">log</span>/relay-log.info</div><div class="line"></div><div class="line"><span class="comment">#slave</span></div><div class="line">slave_load_tmpdir=<span class="regexp">/u01/my</span>3306/tmp</div><div class="line">slave_skip_errors=OFF</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#innodb</span></div><div class="line">innodb_data_home_dir=<span class="regexp">/u01/my</span>3306/<span class="keyword">log</span>/iblog</div><div class="line">innodb_log_group_home_dir=<span class="regexp">/u01/my</span>3306/<span class="keyword">log</span>/iblog</div><div class="line">innodb_adaptive_flushing=ON</div><div class="line">innodb_adaptive_hash_index=ON</div><div class="line">innodb_autoinc_lock_mode=<span class="number">1</span></div><div class="line">innodb_buffer_pool_instances=<span class="number">8</span></div><div class="line"></div><div class="line"><span class="comment">#default</span></div><div class="line">innodb_change_buffering=inserts</div><div class="line">innodb_checksums=ON</div><div class="line">innodb_buffer_pool_size= <span class="number">128</span>M</div><div class="line">innodb_data_file_path=ibdata1:<span class="number">32</span>M;ibdata2:<span class="number">16</span>M:autoextend</div><div class="line">innodb_doublewrite=ON</div><div class="line">innodb_file_format=Barracuda</div><div class="line">innodb_file_per_table=ON</div><div class="line">innodb_flush_log_at_trx_commit=<span class="number">1</span></div><div class="line">innodb_flush_method=O_DIRECT</div><div class="line">innodb_io_capacity=<span class="number">1000</span></div><div class="line">innodb_lock_wait_timeout=<span class="number">10</span></div><div class="line">innodb_log_buffer_size=<span class="number">67108864</span></div><div class="line">innodb_log_file_size=<span class="number">1048576000</span></div><div class="line">innodb_log_files_in_group=<span class="number">4</span></div><div class="line">innodb_max_dirty_pages_pct=<span class="number">60</span></div><div class="line">innodb_open_files=<span class="number">60000</span></div><div class="line">innodb_purge_threads=<span class="number">1</span></div><div class="line">innodb_read_io_threads=<span class="number">4</span></div><div class="line">innodb_stats_on_metadata=OFF</div><div class="line">innodb_support_xa=ON</div><div class="line">innodb_use_native_aio=OFF</div><div class="line">innodb_write_io_threads=<span class="number">10</span></div><div class="line"></div><div class="line">[mysqld_safe]</div><div class="line">datadir=<span class="regexp">/u01/my</span>3306/data</div><div class="line"><span class="comment">#----------------------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># 编译后重新修改目录权限</span></div><div class="line"><span class="keyword">chown</span> -R mysql:mysql /u01/my3306</div></pre></td></tr></table></figure>
<h3 id="初始化mysql脚本"><a href="#初始化MySQL脚本" class="headerlink" title="初始化MySQL脚本"></a>初始化MySQL脚本</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">su - mysql</div><div class="line">cd /u01/my3306/scripts</div><div class="line">./mysql_install_db --defaults-file=/u01/my3306/my.cnf \</div><div class="line">--datadir=/u01/my3306/data --basedir=/u01/my3306 --user=mysql</div></pre></td></tr></table></figure>
<h3 id="启动mysql"><a href="#启动MySQL" class="headerlink" title="启动MySQL"></a>启动MySQL</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">/u01/my3306/bin/mysqld_safe --defaults-file=/u01/my3306/my.cnf --user=mysql &amp;</div></pre></td></tr></table></figure>
<h3 id="登录mysql"><a href="#登录MySQL" class="headerlink" title="登录MySQL"></a>登录MySQL</h3><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line">mysql</div><div class="line"><span class="comment"># 或者</span></div><div class="line">mysql -h127.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> -uroot</div><div class="line"></div><div class="line">Welcome to the MySQL monitor.  Commands end with ; <span class="keyword">or</span> \g.</div><div class="line">Your MySQL connection id is <span class="number">2</span></div><div class="line">Server version: <span class="number">5.6</span>.<span class="number">35</span>-<span class="keyword">log</span> Source distribution</div><div class="line"></div><div class="line">Copyright (c) <span class="number">2000</span>, <span class="number">2016</span>, Oracle <span class="keyword">and</span>/<span class="keyword">or</span> its affiliates. All rights reserved.</div><div class="line"></div><div class="line">Oracle is a registered trademark of Oracle Corporation <span class="keyword">and</span>/<span class="keyword">or</span> its</div><div class="line">affiliates. Other names may be trademarks of their respective</div><div class="line">owners.</div><div class="line"></div><div class="line">Type <span class="string">'help;'</span> <span class="keyword">or</span> <span class="string">'\h'</span> <span class="keyword">for</span> help. Type <span class="string">'\c'</span> to clear the current input statement.</div><div class="line"></div><div class="line">mysql&gt; show databases;</div><div class="line">+--------------------+</div><div class="line">| Database           |</div><div class="line">+--------------------+</div><div class="line">| information_schema |</div><div class="line">| mysql              |</div><div class="line">| performance_schema |</div><div class="line">| test               |</div><div class="line">+--------------------+</div><div class="line"><span class="number">4</span> rows in set (<span class="number">0</span>.<span class="number">01</span> sec)</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MySQL DBA从小白到大神实战-01 MySQL 高级DBA职业规划]]></title>
      <url>http://dbanote.github.io/2017/01/26/mysql/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/01-MySQL-DBA%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98/</url>
      <content type="html"><![CDATA[<h2 id="什么是mvcc有什么作用"><a href="#什么是MVCC？有什么作用？" class="headerlink" title="什么是MVCC？有什么作用？"></a>什么是MVCC？有什么作用？</h2><p>MVCC是Multiversion Concurrency Control的缩写，中文的意思是多版本并发控制。<br>目前多数DB都采用了这一技术，比如Oracle，PostgreSQL等，但各自的实现机制不尽相同，MVCC没有一个统一的实现标准。<br>MVCC能有效降低锁的开销，虽然不同数据库实现MVCC的机制有所有同，但大都实现了非阻塞的读操作，写操作也只锁定必要的行。</p>
<a id="more"></a>
<h2 id="acid中的i是怎么实现在的"><a href="#ACID中的I是怎么实现在的？" class="headerlink" title="ACID中的I是怎么实现在的？"></a>ACID中的I是怎么实现在的？</h2><ul>
<li>A: 原子性 Atomicity</li>
<li>C: 一致性 Consistency</li>
<li>I: 隔离性 Isolation</li>
<li>D: 持久性 Durability</li>
</ul>
<p><code>I</code>的实现需要对事务进行并发控制，使事务在并发环境中相互隔离，一个事务的执行不能被其他事务干扰。也就是说，不同的事务并发操纵相同的数据时，每个事务都有各自完整的数据空间，一个事务内部的操作及使用的数据对其他并发事务是隔离的，一个事务所做的修改在终提交以前，对其他事务是不可见的。</p>
<h2 id="2pc在数据库中是怎么来实现的"><a href="#2PC在数据库中是怎么来实现的？" class="headerlink" title="2PC在数据库中是怎么来实现的？"></a>2PC在数据库中是怎么来实现的？</h2><p>2PC是Two Phase Commitment Protocol的缩写，中文的意思是两阶段提交协议，用于保证属于多个数据分片上的操作的原子性。这些数据分片可能分布在不同的服务器上，2PC协议保证多台服务器上的操作要么全部成功，要么全部失败。 以ORACLE数据库为例，2PC的实现步骤如下：</p>
<h3 id="阶段一提交事务请求投票阶段"><a href="#阶段一：提交事务请求（投票阶段）" class="headerlink" title="阶段一：提交事务请求（投票阶段）"></a>阶段一：提交事务请求（投票阶段）</h3><ol>
<li><p><strong>事务询问</strong><br>协调者向所有的参与者发送事务内容，询问是否可以执行事务提交操作，并开始等待各参与者的响应</p>
</li>
<li><p><strong>执行事务</strong><br>各参与者节点执行事务操作，并将Undo和Redo信息计入事务日志中</p>
</li>
<li><p><strong>各参与者向协调者反馈事务询问的响应</strong><br>如果参与者成功执行了事务操作，那么就反馈给协调者Yes响应，表示事务可以执行；<br>如果参与者没有成功执行事务，那么就反馈给协调者No响应，表示事务不可以执行。</p>
</li>
</ol>
<h3 id="阶段二执行事务提交执行阶段"><a href="#阶段二：执行事务提交（执行阶段）" class="headerlink" title="阶段二：执行事务提交（执行阶段）"></a>阶段二：执行事务提交（执行阶段）</h3><h4 id="执行事务提交"><a href="#执行事务提交" class="headerlink" title="执行事务提交"></a>执行事务提交</h4><p>如果所有参与者的反馈都是Yes响应，那么  </p>
<ol>
<li><p><strong>发送提交请求</strong><br>协调者向所有参与者节点发出Commit请求</p>
</li>
<li><p><strong>事务提交</strong><br>参与者接收到Commit请求后，会正式执行事务提交操作，并在完成提交之后释放在整个事务执行期间占用的事务资源</p>
</li>
<li><p><strong>反馈事务提交结果</strong><br>参与者在完成事务提交之后，向协调者发送ACK信息</p>
</li>
<li><p><strong>完成事务</strong><br>协调者接收到所有参与者反馈的ACK消息后，完成事务</p>
</li>
</ol>
<h4 id="中断事务"><a href="#中断事务" class="headerlink" title="中断事务"></a>中断事务</h4><p>任何一个参与者反馈了No响应，或者在等待超时之后，协调者尚无法接收到所有参与者的反馈响应，那么就会中断事务。</p>
<ol>
<li><p><strong>发送回滚请求</strong><br>协调者向所有参与者节点发出Rollback请求</p>
</li>
<li><p><strong>事务回滚</strong><br>参与者接收到rollback请求后，会利用其在阶段一中记录的Undo信息来执行事务回滚操作，并在完成回滚之后释放整个事务执行期间占用的资源</p>
</li>
<li><p><strong>反馈事务回滚结果</strong><br>参与者在完成事务回滚之后，向协调者发送ACK信息</p>
</li>
<li><p><strong>中断事务</strong><br>协调者接收到所有参与者反馈的ACK信息后，完成事务中断</p>
</li>
</ol>
<h2 id="简单讲讲capbasepaxos算法"><a href="#简单讲讲CAP-base-paxos算法。" class="headerlink" title="简单讲讲CAP/base/paxos算法。"></a>简单讲讲CAP/base/paxos算法。</h2><h3 id="cap定理"><a href="#CAP定理" class="headerlink" title="CAP定理"></a>CAP定理</h3><p>一个分布式系统不可能同时满足一致性(C: Consistency)、可用性(A: Availibility)和分区容错性(P: Partition tolerance)这三个基本需求，最多只能同时满足其中的两项。<br>其中分区容错性是一个最基本的要求，是一个分布式系统必然需要面对和解决的问题。系统架构设计的主要精力应放在根据业务特点在C（一致性）和A（可用性）之间寻求平衡。</p>
<ul>
<li><strong>一致性</strong><br>在分布式环境中，一致性是指数据在多个副本之间是否能够保持一致的特性。<br>CAP定理应用中的放弃一致性，是指放弃数据的强一致性，而保留数据的最终一致性。这样的系统无法保证数据保持实时的一致性，但是能够承诺的是，数据最终会达到一个一致的状态。具体多久能够达到数据一致取决于系统的设计，主要包括数据副本在不同节点之间的复制时间长短。</li>
</ul>
<ul>
<li><strong>可用性</strong><br>系统提供的服务必须一直处于可用的状态，对于用户的每一个操作请求总是能够在有限的时间内返回结果。<br>CAP定理应用中的放弃可用性，是指一旦系统遇到网络分区或其他故障时，受到影响的服务需要等待一定的时间，在等待期间系统无法对外提供正常的服务，即不可用。</li>
</ul>
<ul>
<li><strong>分区容错性</strong><br>分区容错性约束了一个分布式系统需要具有如下特性：分布式系统在遇到任何网络分区故障的时候，仍然需要能够保证对外提供满足一致性和可用性的服务，除非是整个网络环境都发生了故障。<br>对于一个分布式系统而言，分区容错性是一个最基本的要求，CAP定理应用中的放弃分区容错性，一种较为简单的做法是将所有的数据（或者仅仅是那些与事务相关的数据）都放在一个分布式节点上，这样就不会碰到由于网络分区带来的负面影响，但放弃P的同时，也就意味着放弃了系统的可扩展性。</li>
</ul>
<h3 id="base理论"><a href="#BASE理论" class="headerlink" title="BASE理论"></a>BASE理论</h3><p>BASE是Basically Available(基本可用)、 Soft state(软状态) 和Eventually consistent(最终一致性)三个短语的简写。 BASE是对CAP中一致性和可用性权衡的结果，其来源于对大规模互联网系统分布式实践的总结，是基于CAP定理逐步演化而来的，其核心思想是即使无法做到强一致性(Strong Consistency)，但每个应用都可以根据自身的业务特点，采用适当的方式来使系统达到最终一致性(Eventually consistent)。</p>
<ul>
<li><strong>基本可用</strong><br>基本可用是指分布式系统在出现不可预知故障时，允许损失部分可用性，如响应时间上的损失，部分非关键功能上的损失。  </li>
</ul>
<ul>
<li><strong>软状态</strong><br>软状态和是指允许系统中的数据存在中间的状态，并认为该中间状态存在不会影响系统的整体可用性，即允许系统在不同节点的数据副本之间进行数据同步的过程存在延时。  </li>
</ul>
<ul>
<li><strong>最终一致性</strong><br>最终一致性强调的是系统中所有的数据副本，在经过一段时间的同步后，最终能够达到一个一致的状态。BASE理论面向的是大型高可用可扩展的分布式系统，和传统事务的ACID强一致性相反，BASE是通过牺牲强一致性来获得可用性，并允许数据在一段时间内是不一致的，但最终达到一致状态。<br>在实际的分布式场景中，不同业务单元和组件对数据一致性的要求是不同的，因此在具体的分布式系统架构设计过程中，ACID特性与BASE理论往往会结合一起使用。  </li>
</ul>
<h3 id="paxos帕克索斯算法"><a href="#Paxos（帕克索斯）算法" class="headerlink" title="Paxos（帕克索斯）算法"></a>Paxos（帕克索斯）算法</h3><p>Paxos是基于消息传递且具有高度容错性的一致性算法。<br>算法要解决的问题就是如何在可能发生的宕机或网络异常的分布式系统中，快速且正确地在集群内部对某个数据的值达成一致，并且保证不论发生以上任何异常，都不会破坏整个系统的一致性。<br>Paxos算法引入了“过半”的理念，通俗的讲就是少数服从多数据的原则。同时，Paxos算法支持分布式节点角色之间的轮换，这极大的避免了分布式单点的出现，因此Paxos算法解决了无限期等待问题，也解决了“脑残”问题，是目前来说最优秀的分布式一致性协议之一。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MySQL DBA从小白到大神实战-03 深入MySQL体系结构]]></title>
      <url>http://dbanote.github.io/2017/01/23/mysql/%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0/03-MySQL-DBA%E4%BB%8E%E5%B0%8F%E7%99%BD%E5%88%B0%E5%A4%A7%E7%A5%9E%E5%AE%9E%E6%88%98/</url>
      <content type="html"><![CDATA[<h2 id="1-thread-pool的原理是什么"><a href="#1-thread-pool的原理是什么？" class="headerlink" title="1. thread pool的原理是什么？"></a>1. thread pool的原理是什么？</h2><p>线程池的原理很简单，类似于操作系统中的缓冲区的概念，它的流程如下：先启动若干数量的线程，并让这些线程都处于睡眠状态，当客户端有一个新请求时，就会唤醒线程池中的某一个睡眠线程，让它来处理客户端的这个请求，当处理完这个请求后，线程又处于睡眠状态。</p>
<p>MySQL线程池只在MariaDB，Oracle MySQL企业版中提供，Oracle MySQL社区版并不提供。</p>
<p>在传统方式下，MySQL线程调度方式有两种：每个连接一个线程(one-thread-per-connection)和所有连接一个线程（no-threads）。在实际生产中，一般用的是前者。即每当有一个客户端连接到MySQL服务器，MySQL服务器都会为该客户端创建一个单独的线程，请求结束后，销毁线程。连接数越多，则相应的线程会越多。这种方式在高并发情况下，会导致线程的频繁创建和释放。</p>
<a id="more"></a>
<h2 id="2-为什么用double-write就能解决page坏的问题"><a href="#2-为什么用double-write就能解决page坏的问题？" class="headerlink" title="2. 为什么用double write就能解决page坏的问题？"></a>2. 为什么用double write就能解决page坏的问题？</h2><p>InnoDB 的Page Size一般是16KB，其数据校验也是针对这16KB来计算的，将数据写入到磁盘是以Page为单位进行操作的，mysql的page size跟系统文件的page size是不一致的，在写数据的时候, 系统并不是把整个buffer pool page一次性写到disk上，在极端情况下（比如断电）往往并不能保证这一操作的原子性，16K的数据，写入4K时，发生了系统断电/OS crash ，只有一部分写是成功的，这种情况下就是partial page write问题。</p>
<p>mysql在恢复的过程中是检查page的checksum（检验和），checksum就是pgae的最后事务号，发生partial page write问题时，page已经损坏，找不到该page中的事务号，就无法恢复（redo里面是没有保留这个损坏page完全的镜像，就无法从REDO里恢复）。</p>
<p>为了解决 partial page write 问题 ，当mysql将脏数据flush到data file的时候, 先使用memcopy 将脏数据复制到内存中的double write buffer ，之后通过double write buffer再分2次，每次写入1MB到共享表空间，然后马上调用fsync函数，同步到磁盘上，避免缓冲带来的问题，在这个过程中，doublewrite是顺序写，开销并不大，在完成doublewrite写入后，在将double write buffer写入各表空间文件，这时是离散写入。如果发生了极端情况（断电），InnoDB再次启动后，发现了一个Page数据已经损坏，那么此时就可以从double write buffer中进行数据恢复了。</p>
<ul>
<li><strong>double write的优点是什么?</strong><br>double write解决了partial page write的问题，它能保证即使double write部分发生了partial page write但也能恢复。另外一个好处就是double write能减少redo log的量, 有了double write，redo log只记录了二进制的变化量，也就等同于binary log，而通过前段时间的测试确实发现，在double write关闭的情况下，redo log比binary logs要大。</li>
</ul>
<ul>
<li><strong>double write的缺点是什么?</strong><br>虽然mysql称double write是一个buffer, 但其实它是开在物理文件上的一个buffer, 其实也就是file, 所以它会导致系统有更多的fsync操作, 而我们知道硬盘的fsync性能是很慢的, 所以它会降低mysql的整体性能. 但是并不会降低到原来的50%. 这主要是因为: <ol>
<li>double write是一个连接的存储空间, 所以硬盘在写数据的时候是顺序写, 而不是随机写, 这样性能更高。 </li>
<li>另外将数据从double write buffer写到真正的segment中的时候, 系统会自动合并连接空间刷新的方式, 每次可以刷新多个pages。另外将数据从double write buffer写到真正的segment中的时候, 系统会自动合并连接空间刷新的方式, 每次可以刷新多个pages。</li>
</ol>
</li>
</ul>
<ul>
<li><strong>double write在恢复的时候是如何工作的?</strong><br>如果是写double write buffer本身失败，那么这些数据不会被写到磁盘，innodb此时会从磁盘载入原始的数据，然后通过innodb的事务日志来计算出正确的数据，重新写入到double write buffer。如果double write buffer写成功的话，但是写磁盘失败，innodb就不用通过事务日志来计算了，而是直接用buffer的数据再写一遍。在恢复的时候，innodb直接比较页面的checksum，如果不对的话，就从硬盘载入原始数据，再由事务日志开始推演出正确的数据，所以innodb的恢复通常需要较长的时间。</li>
</ul>
<ul>
<li><strong>查看是否开启double write</strong><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">show variables like &apos;%double%&apos;;</div><div class="line">+--------------------+-------+</div><div class="line">| Variable_name      | Value |</div><div class="line">+--------------------+-------+</div><div class="line">| innodb_doublewrite | ON    |</div><div class="line">+--------------------+-------+</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="3-innodb-redo-log与binlog有什么区别有了innodb-redo-log为什么还要binlog"><a href="#3-InnoDB-redo-log与binlog有什么区别？有了InnoDB-redo-log为什么还要binlog" class="headerlink" title="3. InnoDB redo log与binlog有什么区别？有了InnoDB redo log为什么还要binlog?"></a>3. InnoDB redo log与binlog有什么区别？有了InnoDB redo log为什么还要binlog?</h2><ul>
<li>binlog会记录所有与MySQL数据库有关的日志记录，包括InnoDB、MyISAM、Heap等其他存储引擎的日志；而InnoDB存储引擎的redo log只记录有关该引擎本身的事务日志。</li>
<li>无论将binlog文件记录的格式设为STATEMENT还是ROW，又或是MIXED，其记录的都是关于一个事务的具体操作内容，即该日志是逻辑日志；而InnoDB存储引擎的redo log是关于每个页（page）更改的物理情况。</li>
<li>binlog文件仅在事务提交后进行写入，即只写磁盘一次，不论这时该事务多大；而在事务进行的过程中，却不断有重做日志条目（redo entry）被写入到重做日志文件中。</li>
</ul>
<p>binlog是MySQL Server层记录的日志，所有引擎产生的日志都会通过binlog进行封装；MySQL的特点就是支持多存储引擎，为了兼容绝大部分引擎来支持类似复制这样的特性，就需要采用binlog日志来用实现。简单的说，binlog 是mysqld 记录全局数据结构变化的log，用于复制和恢复；innodb redo log 是innodb 引擎自己记录事务过程的log，用于回滚和crash 恢复。</p>
<h2 id="4-课程笔记"><a href="#4-课程笔记" class="headerlink" title="4. 课程笔记"></a>4. 课程笔记</h2><ol>
<li>MySQL是单进程多线程</li>
<li>MySQL存储引擎是可插拔的，有InnoDB，MyISAM(早期)等</li>
<li>存储引擎是用来处理数据库相关的CRUD的操作</li>
<li>CRUD是指在做计算处理时的增加(Create)、读取(Retrieve)(重新得到数据)、更新(Update)和删除(Delete)几个单词的首字母简写</li>
<li>存储引擎的对象是表</li>
<li>MySQL数据库与实例的关系是一对一的</li>
<li>MySQL的数据库是物理操作系统文件或其他形式文件类型的集合，实例是由数据库后台进程/线程以及一个共享内存区组成</li>
<li><p>MySQL 5.6 InnoDB架构中Buffer Pool<br><img src="/img/2017/mysql_innodb_architecture_00.jpg" alt="mysql_innodb_architecture_00"><br>(1) <code>index page</code>: 数据缓存放在index page里，因MySQL数据的存储结构是Btree，所以称index page，page的概念相当于oracle中的buffer，1 page默认大小16k<br>(2) <code>data dictionary</code>: 数据字典的缓冲，其文件是存放在iblog目录下的ibdata中，如<code>/u01/my3306/log/iblog/ibdata1</code><br><img src="/img/2017/mysql_innodb_architecture_01.png" alt="mysql_innodb_architecture_01"><br>(3) <code>lock info</code>: 行锁放在lock info中，当行锁达到一定值的时候，行锁就会升级为表锁<br>(4) <code>undo page</code>: 缓存UNDO操作，DML操作修改前镜像放到undo page中，其文件也是存放在iblog目录下的ibdata中<br>(5) <code>insert buffer page</code>: 缓存二级索引（非唯一索引，或称辅助索引）<br>(6) <code>adaptive hash index</code>: 自适应哈希索引，InnoDB存储引擎会监控对表上索引的查找，如果观察到建立哈希索引可以带来速度的提升，则建立哈希索引，所以称之为自适应（adaptive）的。自适应哈希索引通过缓冲池的B+树构造而来，因此建立的速度很快。而且不需要将整个表都建哈希索引，InnoDB存储引擎会自动根据访问的频率和模式来为某些页建立哈希索引。<br>(7) <code>Buffer Pool</code>的大小一般设置为物理内存的60%-80%，在MySQL中可以通过以下命令查询：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mysql&gt; show variables like &apos;%buffer_pool_size%&apos;;</div><div class="line">+-------------------------+-----------+</div><div class="line">| Variable_name           | Value     |</div><div class="line">+-------------------------+-----------+</div><div class="line">| innodb_buffer_pool_size | 134217728 |</div><div class="line">+-------------------------+-----------+</div></pre></td></tr></table></figure>
</li>
<li><p><code>redo log buffer</code>: 缓存redo log，通过redo log thead写到redo log文件中存放在iblog目录下的ibdata中，如<code>/u01/my3306/log/iblog/ib_logfile0</code></p>
</li>
<li>查找算法：链表遍历、二分查找、Btree查找、HASH查找</li>
<li><p>当数据库关闭时，把热块保存(缓存)到文件，在打开时再从文件加载到内存里，参数和设置方法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">show variables like &apos;%dump%&apos;;</div><div class="line">+-------------------------------------+-------+</div><div class="line">| Variable_name                       | Value |</div><div class="line">+-------------------------------------+-------+</div><div class="line">| innodb_buffer_pool_dump_at_shutdown | OFF   |</div><div class="line">| innodb_buffer_pool_dump_now         | OFF   |</div><div class="line">+-------------------------------------+-------+</div><div class="line"></div><div class="line">set global innodb_buffer_pool_dump_at_shutdown=1;</div><div class="line">set global innodb_buffer_pool_dump_now=1;</div><div class="line"></div><div class="line">exit</div><div class="line"></div><div class="line"># 关闭数据库</div><div class="line">mysqladmin shutdown</div><div class="line"></div><div class="line"># 查看缓存的文件</div><div class="line">ll /u01/my3306/log/iblog/</div><div class="line">total 4145172</div><div class="line">-rw-rw----. 1 mysql mysql        884 Jan 24 17:38 ib_buffer_pool   //这个就是缓存的文件</div><div class="line">-rw-rw----. 1 mysql mysql   33554432 Jan 24 17:38 ibdata1</div><div class="line">-rw-rw----. 1 mysql mysql   16777216 Jan 24 17:38 ibdata2</div><div class="line">-rw-rw----. 1 mysql mysql 1048576000 Jan 24 17:38 ib_logfile0</div><div class="line">-rw-rw----. 1 mysql mysql 1048576000 Jan 17 17:37 ib_logfile1</div><div class="line">-rw-rw----. 1 mysql mysql 1048576000 Jan 17 17:37 ib_logfile2</div><div class="line">-rw-rw----. 1 mysql mysql 1048576000 Jan 17 17:37 ib_logfile3</div><div class="line"></div><div class="line"># 指定参数启动数据库</div><div class="line">mysqld_safe --defaults-file=/u01/my3306/my.cnf &amp;</div></pre></td></tr></table></figure>
</li>
<li><p>安装MySQL Utilities<br>(1)选择MySQL Utilities适合的版本下载：<a href="https://dev.mysql.com/downloads/utilities/" target="_blank" rel="external">https://dev.mysql.com/downloads/utilities/</a><br><img src="/img/2017/mysql_utilities_download_00.png" alt="mysql_utilities_download_00"><br>(2)选择Connector/Python适合的版本下载（依赖包）：<a href="https://dev.mysql.com/downloads/connector/python/" target="_blank" rel="external">https://dev.mysql.com/downloads/connector/python/</a><br><img src="/img/2017/mysql_utilities_download_01.png" alt="mysql_utilities_download_01"><br>(3)上传安装包到服务器/tmp目录，并安装（root用户下）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">ll</div><div class="line">total 32836</div><div class="line">-rw-r--r--. 1 root root    258776 Jan 25 11:50 mysql-connector-python-2.1.5-1.el6.x86_64.rpm</div><div class="line">-rw-r--r--. 1 root root    892500 Jan 25 11:39 mysql-utilities-1.6.4-1.el6.noarch.rpm</div><div class="line"></div><div class="line">rpm -ivh mysql-connector-python-2.1.5-1.el6.x86_64.rpm</div><div class="line">rpm -ivh mysql-utilities-1.6.4-1.el6.noarch.rpm</div></pre></td></tr></table></figure>
<p>(4)MySQL Utilities–mysqlfrm</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># 以诊断模式查看表结构定义文件</div><div class="line">mysqlfrm --diagnostic user.frm</div></pre></td></tr></table></figure>
</li>
<li><p>查看错误日志所在位置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mysql&gt; show variables like &apos;%log_error%&apos;;</div><div class="line">+---------------------+---------------------------+</div><div class="line">| Variable_name       | Value                     |</div><div class="line">+---------------------+---------------------------+</div><div class="line">| binlog_error_action | IGNORE_ERROR              |</div><div class="line">| log_error           | /u01/my3306/log/error.log |  //错误日志所在位置</div><div class="line">+---------------------+---------------------------+</div></pre></td></tr></table></figure>
</li>
<li><p>开启慢查询</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mysql&gt; show variables like &apos;%slow%&apos;;</div><div class="line">+---------------------------+--------------------------+</div><div class="line">| Variable_name             | Value                    |</div><div class="line">+---------------------------+--------------------------+</div><div class="line">| log_slow_admin_statements | ON                       |</div><div class="line">| log_slow_slave_statements | OFF                      |</div><div class="line">| slow_launch_time          | 2                        |</div><div class="line">| slow_query_log            | ON                       |   //开启慢查询</div><div class="line">| slow_query_log_file       | /u01/my3306/log/slow.log |   //慢查询日志位置</div><div class="line">+---------------------------+--------------------------+ </div><div class="line"></div><div class="line">mysql&gt; show variables like &apos;%query_time%&apos;;</div><div class="line">+-----------------+----------+</div><div class="line">| Variable_name   | Value    |</div><div class="line">+-----------------+----------+</div><div class="line">| long_query_time | 1.000000 |   //慢查询时间为1s</div><div class="line">+-----------------+----------+</div></pre></td></tr></table></figure>
</li>
<li><p>通用日志默认是不开启的（通用日志主要用在数据库审计）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mysql&gt; show variables like &apos;%gen%&apos;;</div><div class="line">+------------------+----------------------------+</div><div class="line">| Variable_name    | Value                      |</div><div class="line">+------------------+----------------------------+</div><div class="line">| general_log      | OFF                        |</div><div class="line">| general_log_file | /u01/my3306/data/mysql.log |</div><div class="line">+------------------+----------------------------+</div></pre></td></tr></table></figure>
</li>
<li><p>最大用户连接数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mysql&gt; show variables like &apos;%max_user_connect%&apos;;</div><div class="line">+----------------------+-------+</div><div class="line">| Variable_name        | Value |</div><div class="line">+----------------------+-------+</div><div class="line">| max_user_connections | 2800  |</div><div class="line">+----------------------+-------+</div></pre></td></tr></table></figure>
</li>
<li><p>查出mysqld进程号为27507</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">ps -ef | grep 3306</div><div class="line"></div><div class="line">root      5475  5183  0 11:44 pts/1    00:00:00 grep 3306</div><div class="line">mysql    26656     1  0 Jan17 ?        00:00:00 /bin/sh /u01/my3306/bin/mysqld_safe --defaults-file=/u01/my3306/my.cnf --user=mysql</div><div class="line">mysql    27507 26656  0 Jan17 ?        00:01:32 /u01/my3306/bin/mysqld --defaults-file=/u01/my3306/my.cnf --basedir=/u01/my3306 --datadir=/u01/my3306/data --plugin-dir=/u01/my3306/lib/plugin --log-error=/u01/my3306/log/error.log --open-files-limit=65535 --pid-file=/u01/my3306/run/mysqld.pid --socket=/u01/my3306/run/mysql.sock --port=3306</div></pre></td></tr></table></figure>
</li>
<li><p>查看mysqld进程27507下所有线程</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">pstack 27507</div><div class="line"></div><div class="line">Thread 28 (Thread 0x7f9b070c4700 (LWP 27508)):</div><div class="line">#0  0x00000038a040b68c in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0</div><div class="line">#1  0x00000000009536bb in os_event_wait_low(os_event*, long) ()</div><div class="line">#2  0x0000000000950aa6 in os_aio_simulated_handle(unsigned long, fil_node_t**, void**, unsigned long*) ()</div><div class="line">#3  0x0000000000a49ed7 in fil_aio_wait(unsigned long) ()</div><div class="line">#4  0x00000000009b9638 in io_handler_thread ()</div><div class="line">#5  0x00000038a0407aa1 in start_thread () from /lib64/libpthread.so.0</div><div class="line">#6  0x00000038a00e8aad in clone () from /lib64/libc.so.6</div><div class="line"># ...... 中间略过</div><div class="line">Thread 1 (Thread 0x7f9b18f637e0 (LWP 27507)):</div><div class="line">#0  0x00000038a00df283 in poll () from /lib64/libc.so.6</div><div class="line">#1  0x0000000000585284 in handle_connections_sockets() ()</div><div class="line">#2  0x000000000058cd51 in mysqld_main(int, char**) ()</div><div class="line">#3  0x00000038a001ed1d in __libc_start_main () from /lib64/libc.so.6</div><div class="line">#4  0x000000000057dbc1 in _start ()</div></pre></td></tr></table></figure>
</li>
<li><p>read/write thread</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mysql&gt; show variables like &apos;%io_thread%&apos;;</div><div class="line">+-------------------------+-------+</div><div class="line">| Variable_name           | Value |</div><div class="line">+-------------------------+-------+</div><div class="line">| innodb_read_io_threads  | 4     |     # 预读</div><div class="line">| innodb_write_io_threads | 10    |</div><div class="line">+-------------------------+-------+</div></pre></td></tr></table></figure>
</li>
<li><p>purge thread: 清undo page</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mysql&gt; show variables like &apos;%purge%&apos;;</div><div class="line">+----------------------------+-------+</div><div class="line">| Variable_name              | Value |</div><div class="line">+----------------------------+-------+</div><div class="line">| gtid_purged                |       |</div><div class="line">| innodb_max_purge_lag       | 0     |</div><div class="line">| innodb_max_purge_lag_delay | 0     |</div><div class="line">| innodb_purge_batch_size    | 300   |</div><div class="line">| innodb_purge_threads       | 1     |</div><div class="line">| relay_log_purge            | ON    |</div><div class="line">+----------------------------+-------+</div></pre></td></tr></table></figure></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hexo+github搭建个人博客]]></title>
      <url>http://dbanote.github.io/2017/01/19/tools/hexo+github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<h2 id="前言我的博客之旅"><a href="#前言：我的博客之旅" class="headerlink" title="前言：我的博客之旅"></a>前言：我的博客之旅</h2><p>我用<code>wordpress</code>写过一段时间博客，因租用的外国空间访问速度不理想，放弃！<br>我用<code>vimwiki</code>写过一段时间博客，因其配置、更新博客比较麻烦，且生成的html也需要存放到租用的空间上才能共享，放弃！<br>我在类似CSDN免费空间上也写过一段时间博客，因没有客户端工具，在线编辑功能受限，且本地不能保存备份博客，放弃！<br>这两年我一直用有道云笔记写博客，其本地编辑功能比较强大，有易用的分类目录和标签功能，单条博客也易于分享，但缺乏一个整体对外的窗口，文章中的代码也无法实现高亮显示，不够美观！<br>2017年初，偶然的机会知道了hexo，因有较强的markdown和git功底，决定开启hexo写博之旅。</p>
<blockquote>
<p><strong>hexo是什么?</strong><br>hexo是一款基于Node.js的静态博客框架。 hexo官网地址：<a href="https://hexo.io" target="_blank" rel="external">https://hexo.io</a></p>
</blockquote>
<a id="more"></a>
<h2 id="为什么选择hexo"><a href="#为什么选择Hexo" class="headerlink" title="为什么选择Hexo"></a>为什么选择Hexo</h2><p>目前比较流行的静态博客框架有<a href="http://jekyllrb.com/" target="_blank" rel="external">Jekyll</a>，Hexo，Simple，Octopress，Pelican以及Lo·gecho等。 这些静态博客框架各有各的好处，之所以选择Hexo，最主要的原因如下：</p>
<ol>
<li>Hexo基于Node.js实现，在Windows上安装Node.js环境简单；而其他的静态博客框架如Jekyll基于Ruby实现，不建议在Windows下搭建的。</li>
<li>Hexo有本地WEB服务器，能实现本地预览，并直接发布到WEB容器(github)中实现同步；而Jekyll没有本地服务器，无法实现本地博文预览。</li>
<li>Hexo主题丰富，基本直接就可以用，不需要太多的修改。</li>
<li>支持Markdown语法。</li>
</ol>
<h2 id="搭建本地博客"><a href="#搭建本地博客" class="headerlink" title="搭建本地博客"></a>搭建本地博客</h2><h3 id="下载并安装git和nodejs"><a href="#下载并安装git和Node-js" class="headerlink" title="下载并安装git和Node.js"></a>下载并安装git和Node.js</h3><p>从以下地址下载所需的Windows版安装包，使用默认设置安装：</p>
<ul>
<li>Node.js: <a href="https://nodejs.org" target="_blank" rel="external">https://nodejs.org</a></li>
<li>git: <a href="https://git-scm.com" target="_blank" rel="external">https://git-scm.com</a></li>
</ul>
<p>安装成功后，可通过以下命令查看安装版本：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">$ node -v</div><div class="line">v6.9.4</div><div class="line"></div><div class="line">$ git --version</div><div class="line">git version 2.11.1.windows.1</div></pre></td></tr></table></figure></p>
<h3 id="配置git-bash样式可选"><a href="#配置Git-Bash样式（可选）" class="headerlink" title="配置Git Bash样式（可选）"></a>配置Git Bash样式（可选）</h3><p>新建<code>D:\08_dbanote</code>目录做为博客根目录，进入目录，右键选择Git Bash Here<br><img src="/img/2017/git-bash-here.jpg" alt="git-bash-here.jpg"></p>
<p>在弹出的窗口上右键选择Options，设置窗口样式<br><img src="/img/2017/git-bash-01.png" alt="git-bash-01.jpg"></p>
<p>设置显示字体<br><img src="/img/2017/git-bash-02.jpg" alt="git-bash-02.jpg"></p>
<p>设置窗口大小(需重新开启Git Bash方可生效)<br><img src="/img/2017/git-bash-03.jpg" alt="git-bash-03.jpg"></p>
<p>设置鼠标右健直接粘贴<br><img src="/img/2017/git-bash-04.jpg" alt="git-bash-04.jpg"></p>
<h3 id="安装淘宝的cnpm源"><a href="#安装淘宝的cnpm源" class="headerlink" title="安装淘宝的cnpm源"></a>安装淘宝的cnpm源</h3><p>访问国外源速度较慢，建议安装淘宝的cnpm源，以后使用<code>cnpm</code>命令代替<code>npm</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p>
<h3 id="安装hexo-g-是全局化安装"><a href="#安装hexo-g-是全局化安装" class="headerlink" title="安装hexo (-g 是全局化安装)"></a>安装hexo (-g 是全局化安装)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">cnpm install hexo-cli -g</div></pre></td></tr></table></figure>
<h3 id="初始化hexo博客"><a href="#初始化hexo博客" class="headerlink" title="初始化hexo博客"></a>初始化hexo博客</h3><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 确保当前目录为博客根目录</span></div><div class="line">cd D:\08_dbanote</div><div class="line">hexo init</div><div class="line">cnpm install</div></pre></td></tr></table></figure>
<h3 id="安装git部署包"><a href="#安装git部署包" class="headerlink" title="安装git部署包"></a>安装git部署包</h3><p>作用：通过<code>hexo d</code>这一条命令，将博客部署到git服务器上，如github<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">cnpm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<h3 id="生成博客静态文件"><a href="#生成博客静态文件" class="headerlink" title="生成博客静态文件"></a>生成博客静态文件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">hexo g</div></pre></td></tr></table></figure>
<h3 id="启动本地服务器"><a href="#启动本地服务器" class="headerlink" title="启动本地服务器"></a>启动本地服务器</h3><p>确保4000端口没有被占用<br><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 在windows命令行下执行</span></div><div class="line">netstat -ano | findstr <span class="string">"4000"</span></div><div class="line">  TCP    <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">4000</span>         <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>:<span class="number">0</span>              LISTENING       <span class="number">16360</span></div><div class="line">  TCP    <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">4000</span>         <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">53443</span>        ESTABLISHED     <span class="number">16360</span></div><div class="line">  TCP    <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">4000</span>         <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">63485</span>        CLOSE_WAIT      <span class="number">16360</span></div><div class="line">  TCP    <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">53443</span>        <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">4000</span>         ESTABLISHED     <span class="number">14256</span></div><div class="line">  TCP    <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">63485</span>        <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">4000</span>         FIN_WAIT_2      <span class="number">14256</span></div><div class="line"></div><div class="line"><span class="comment"># 4000端口被占用，查找进程号对应的程序</span></div><div class="line">tasklist | findstr <span class="string">"16360"</span></div><div class="line">FoxitProtect.exe             <span class="number">16360</span> Services                   <span class="number">0</span>     <span class="number">11</span>,<span class="number">628</span> K</div><div class="line"></div><div class="line"><span class="comment"># 结束该进程</span></div><div class="line">taskkill /f /t /im FoxitProtect.exe</div></pre></td></tr></table></figure></p>
<p>启动本地服务器<br><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line">hexo <span class="keyword">s</span></div><div class="line"><span class="comment">#---------------------------------------------------------------------</span></div><div class="line">INFO  Start processing</div><div class="line">INFO  Hexo is running at http:<span class="regexp">//localhost</span>:<span class="number">4000</span>/. Press Ctrl+C to stop.</div><div class="line"><span class="comment">#---------------------------------------------------------------------</span></div></pre></td></tr></table></figure></p>
<h3 id="本地预览博客"><a href="#本地预览博客" class="headerlink" title="本地预览博客"></a>本地预览博客</h3><p>打开浏览器，输入<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a><br><img src="/img/2017/hexo_init.png" alt="hexo_init.png"></p>
<h3 id="配置博客网站基本信息"><a href="#配置博客网站基本信息" class="headerlink" title="配置博客网站基本信息"></a>配置博客网站基本信息</h3><p>编辑修改根目录下的<code>_config.yml</code>文件<br><figure class="highlight perl"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 站点基本信息修改</span></div><div class="line"><span class="comment"># Site</span></div><div class="line">title: 一个DBA的工作学习笔记</div><div class="line">subtitle: 欲事之无繁，则必劳于始而逸于终</div><div class="line">author: 刘雅君</div><div class="line"></div><div class="line"><span class="comment"># 设置网站url</span></div><div class="line"><span class="comment"># URL</span></div><div class="line">url: http:<span class="regexp">//dbanote</span>.github.io</div><div class="line"></div><div class="line"><span class="comment"># 取消代码段行号显示</span></div><div class="line"><span class="comment"># Writing</span></div><div class="line">highlight:</div><div class="line">  enable: true</div><div class="line">  line_number: false</div><div class="line"></div><div class="line"><span class="comment"># 设置部署到github(https方式出现错误，使用ssh方式成功)</span></div><div class="line"><span class="comment"># Deployment</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: git@github.com:dbanote/dbanote.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>生成SSH密码<br>ssh-keygen -t rsa -C “15004618839@139.com”</p>
<p>git config –global user.name “dbanote”<br>git config –global user.email “15004618839@139.com”</p>
<p>git remote add origin <a href="https://github.com/foxbei/hexo.git" target="_blank" rel="external">https://github.com/foxbei/hexo.git</a></p>
<p>git pull origin</p>
<p>liuyajun@liuyajun-PC MINGW64 /d<br>$ git remote add origin <a href="https://github.com/foxbei/hexo.git" target="_blank" rel="external">https://github.com/foxbei/hexo.git</a><br>fatal: Not a git repository (or any of the parent directories): .git</p>
<p>liuyajun@liuyajun-PC MINGW64 /d<br>$ echo “# hexo” &gt;&gt; README.md</p>
<p>liuyajun@liuyajun-PC MINGW64 /d<br>$<br>Initialized empty Git repository in D:/.git/</p>
<p>liuyajun@liuyajun-PC MINGW64 /d (master)</p>
<p>生成静态页<br>hexo g</p>
<p>启动web server<br>hexo s</p>
<p>部署到github上<br>hexo d</p>
<p>ssh -T git@github.com</p>
]]></content>
    </entry>
    
  
  
</search>
